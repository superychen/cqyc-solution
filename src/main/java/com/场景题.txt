1、秒杀：瞬时流量请求、热点数据、大数据量、库存的正确扣减、黄牛抢购（防刷）、重复下单、对普通交易的影响
2、库存扣减（保证原子性和有序性）：数据库（乐观锁）、redis+lua脚本。两者结合使用
3、如何实现一个RPC框架：调用肯定需要通信协议吧，参数需要序列化吧（序列化协议），服务提供和调用需要注册中心吧（服务注册与发现），
	多个服务提供者就需要负载均衡了吧，像本地一样调用远程（需要动态代理吧），除了这上面还有缓存、服务降级、异步回调、服务治理这些吧。
4、40亿个QQ号，限制1G内存，如何去重？用bitMap
5、B+树为什么建议数据不超过2000万？B+树建议3~4层，非叶子节点两层可存1170 * 1170，每行数据1K的情况下，1170 * 1170 * 16与等于2000万
6、数据对账？分布式系统难免出现数据一致性问题，为保证最终一致性，需要对账。离线对账和实时对账，两方案（定时任务扫或数仓大数据sql对比）
		离线数仓，binlog同步数仓实现准实时，flink核对
7、热点数据更新会带来什么问题？锁竞争、占用数据库连接、耗尽cpu、死锁、索引维护开销大、主从不一致
8、和外部交互如何防止不被外部服务拖垮？异步交互、文件交互、超时机制、限流降级熔断、业务取舍



es存数据是怎么存的？
es倒排索引？
线程池的最大核心线程数？