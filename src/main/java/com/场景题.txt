1、秒杀：
    瞬时流量请求、热点数据、大数据量、库存的正确扣减、黄牛抢购（防刷）、重复下单、对普通交易的影响
2、库存扣减（保证原子性和有序性）：
    数据库（乐观锁）、redis+lua脚本。两者结合使用
3、如何实现一个RPC框架：
    调用肯定需要通信协议吧，参数需要序列化吧（序列化协议），服务提供和调用需要注册中心吧（服务注册与发现），
	多个服务提供者就需要负载均衡了吧，像本地一样调用远程（需要动态代理吧），除了这上面还有缓存、服务降级、异步回调、服务治理这些吧。
4、40亿个QQ号，限制1G内存，如何去重？
    用bitMap
5、B+树为什么建议数据不超过2000万？
    B+树建议3~4层，非叶子节点两层可存1170 * 1170，每行数据1K的情况下，1170 * 1170 * 16与等于2000万
6、数据对账？
    分布式系统难免出现数据一致性问题，为保证最终一致性，需要对账。离线对账和实时对账，两方案（定时任务扫或数仓大数据sql对比）
		离线数仓，binlog同步数仓实现准实时，flink核对
7、热点数据更新会带来什么问题？
    锁竞争、占用数据库连接、耗尽cpu、死锁、索引维护开销大、主从不一致
8、和外部交互如何防止不被外部服务拖垮？
    异步交互、文件交互、超时机制、限流降级熔断、业务取舍
9、一个接口3000QPS，RT200ms，预估多少台机器？
    单线程一秒可响应1000/200=5个请求，tomcat默认200个线程，乘以就是1000。3000的QPS就要三台。需要考虑cpu、内存、磁盘硬件问题，所以一般按照2~3倍。
10、两亿整数用100M内存存储，还要高效判断一个数是否在这个数中？
    用java集和list或hashset存，但是会内存不足，整数4个字节，4*2亿=8亿字节，1M=（1024*1024）一百万字节。用bitmap，初始化两亿位。一字节=8位
11、mysql数据量大，只考虑分库分表嘛？
    分库分表可能会带来一定问题，跨库事务，分页查询等，尽量不使用。用数据库优化、缓存、分区、数据归档、分布式数据库等也可解决。
12、外部数据对接时，需要注意？
    安全性（协议加密、数据加密、加签验签、oauth2）、准确性、效率（数据压缩，专线传输）以及合规性（隐私数据）。
13、订单关闭如何实现？
    定时任务（适合时间精确度不高的场景）redisson+redis。其他实现不推荐（mq、kafka时间轮、被动关）
14、如何实现平滑的数据迁移？
    关键问题：保证数据完整性，数据实时性，数据校验，灰度控制，回滚机制。工具：dataX、canal
    迁移流程：双写（增量数据不丢，随时做回滚）、增量数据核对、增量数据更新、存量数据迁移、存量数据核对、切流读新、切流写新、开关&监控
15、如何设计一个分库分表？
    1、分表是解决大数据量的问题，分库是解决高并发的问题。垂直分、水平分。垂直就是将库分为订单库、商品库这种，表就是将100个字段拆50个分两张。
    2、水平分就是库和表的数据分成几份处理。分表方案：时间、买家ID（平均度高，避免数据倾斜）、基因法（订单号分，生成的时候就把分表结果放到订单号中）。
    3、分表算法：直接取模、按照关键字（地区、月份）、hash取模、一致性hash
16、shardingJDBC有哪些分片策略，你用的哪个？
    分片策略 = 分片算法+分片键。 01、精确分片算法：用于处理单一键作为分片键的。02、范围分片算法：处理单一键between and分片场景。
    03、符合分片算法：处理使用多键进行分片的场景 05、hint分片算法：用户自己制定那张表查询时，明确告知shardingJDBC用那张物理表。
        注意：shardingJDBC查询时如果没有分表键：会采用广播路由的方式（比如order_01 union order_02这种），
                广播路由分为：全库表路由、全库路由、全实例路由、单播路由和阻断路由
17、流程处理时优化？
    使用状态机模式，添加springEvent通过时间来处理流程状态流转。比如永辉供应商引入时直接调用流程引擎接口放在事务里面，优化时提出来用状态机模式。

商品中心应该按照什么维度分表？




es存数据是怎么存的？
    01、数据先写入buffer，此时无法被搜索，同时写入translog日志实现持久化。 02、buffer写满时，执行refresh操作，然后刷新到新的segment文件中，每隔1s。
    03、隔一段时间对segment进行merge。04、每次refresh，buffer被清除，translog不会，当达到一定长度，处罚commit操作。
    05、commit中，会把数据刷到os cache中，清空buffer，最后通过fsync操作写入磁盘文件。
es倒排索引？
线程池的最大核心线程数？
虚拟机栈除了stackOverFLower溢出，如果不断创建线程，导致虚拟机栈扩展时无法申请足够的内存空间，也会OOM。

1、你掌握哪些linux命令？？：
    系统信息：top（查看cpu使用情况）、df（显示磁盘空间使用情况）、du（查看目录和文件的磁盘使用量）、date（查看系统时间）
    系统管理：ps（查看当前进程）、kill（杀死进程，慎用）、chmod（更改文件和目录权限）、chown（更改文件或目录所有者和群组）
    文件操作：ls（或ll，查看目录内容）、cd（更改目录）、pwd（显示当前目录路径）、open（直接打开文件）、mkdir（创建新目录）、rm（删除）、cp（复制）
        mv（移动）、touch（创建文件）、find（搜索文件或目录）、
    日志查看：vi/vim、cat、more/less、tail
    网络通信：ping（检测另一台主机）、curl/wget（从网络下载文件）、netstat（显示网络连接信息）、ssh（远程登录）、scp（复制远程文件）、telnet（主要用来检测端口）
        ifconfig（查看地址）
    压缩与解压：tar、gzip、zip